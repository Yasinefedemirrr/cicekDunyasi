{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\90545\\\\source\\\\vscRepos\\\\\\xC7i\\xE7ekD\\xFCnyas\\u0131\\\\cicekdunyasi-web\\\\src\\\\contexts\\\\CartContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext(undefined);\nexport const useCart = () => {\n  _s();\n  const context = useContext(CartContext);\n  if (context === undefined) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [items, setItems] = useState([]);\n  const addToCart = (flower, quantity) => {\n    setItems(prevItems => {\n      const existingItem = prevItems.find(item => item.flower.id === flower.id);\n      if (existingItem) {\n        return prevItems.map(item => item.flower.id === flower.id ? {\n          ...item,\n          quantity: item.quantity + quantity\n        } : item);\n      } else {\n        return [...prevItems, {\n          flower,\n          quantity\n        }];\n      }\n    });\n  };\n  const removeFromCart = flowerId => {\n    setItems(prevItems => prevItems.filter(item => item.flower.id !== flowerId));\n  };\n  const updateQuantity = (flowerId, quantity) => {\n    if (quantity <= 0) {\n      removeFromCart(flowerId);\n      return;\n    }\n    setItems(prevItems => prevItems.map(item => item.flower.id === flowerId ? {\n      ...item,\n      quantity\n    } : item));\n  };\n  const clearCart = () => {\n    setItems([]);\n  };\n  const getTotalPrice = () => {\n    return items.reduce((total, item) => total + item.flower.price * item.quantity, 0);\n  };\n  const getTotalItems = () => {\n    return items.reduce((total, item) => total + item.quantity, 0);\n  };\n  const value = {\n    items,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    getTotalPrice,\n    getTotalItems\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"6WAym07vHedVzpAy8bFDJKqtv8I=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","CartContext","undefined","useCart","_s","context","Error","CartProvider","children","_s2","items","setItems","addToCart","flower","quantity","prevItems","existingItem","find","item","id","map","removeFromCart","flowerId","filter","updateQuantity","clearCart","getTotalPrice","reduce","total","price","getTotalItems","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/90545/source/vscRepos/ÇiçekDünyası/cicekdunyasi-web/src/contexts/CartContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode } from 'react';\r\nimport { CartItem, Flower } from '../types';\r\n\r\ninterface CartContextType {\r\n  items: CartItem[];\r\n  addToCart: (flower: Flower, quantity: number) => void;\r\n  removeFromCart: (flowerId: number) => void;\r\n  updateQuantity: (flowerId: number, quantity: number) => void;\r\n  clearCart: () => void;\r\n  getTotalPrice: () => number;\r\n  getTotalItems: () => number;\r\n}\r\n\r\nconst CartContext = createContext<CartContextType | undefined>(undefined);\r\n\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (context === undefined) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface CartProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const CartProvider: React.FC<CartProviderProps> = ({ children }) => {\r\n  const [items, setItems] = useState<CartItem[]>([]);\r\n\r\n  const addToCart = (flower: Flower, quantity: number) => {\r\n    setItems(prevItems => {\r\n      const existingItem = prevItems.find(item => item.flower.id === flower.id);\r\n      \r\n      if (existingItem) {\r\n        return prevItems.map(item =>\r\n          item.flower.id === flower.id\r\n            ? { ...item, quantity: item.quantity + quantity }\r\n            : item\r\n        );\r\n      } else {\r\n        return [...prevItems, { flower, quantity }];\r\n      }\r\n    });\r\n  };\r\n\r\n  const removeFromCart = (flowerId: number) => {\r\n    setItems(prevItems => prevItems.filter(item => item.flower.id !== flowerId));\r\n  };\r\n\r\n  const updateQuantity = (flowerId: number, quantity: number) => {\r\n    if (quantity <= 0) {\r\n      removeFromCart(flowerId);\r\n      return;\r\n    }\r\n\r\n    setItems(prevItems =>\r\n      prevItems.map(item =>\r\n        item.flower.id === flowerId\r\n          ? { ...item, quantity }\r\n          : item\r\n      )\r\n    );\r\n  };\r\n\r\n  const clearCart = () => {\r\n    setItems([]);\r\n  };\r\n\r\n  const getTotalPrice = () => {\r\n    return items.reduce((total, item) => total + (item.flower.price * item.quantity), 0);\r\n  };\r\n\r\n  const getTotalItems = () => {\r\n    return items.reduce((total, item) => total + item.quantity, 0);\r\n  };\r\n\r\n  const value: CartContextType = {\r\n    items,\r\n    addToCart,\r\n    removeFromCart,\r\n    updateQuantity,\r\n    clearCart,\r\n    getTotalPrice,\r\n    getTotalItems,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={value}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}