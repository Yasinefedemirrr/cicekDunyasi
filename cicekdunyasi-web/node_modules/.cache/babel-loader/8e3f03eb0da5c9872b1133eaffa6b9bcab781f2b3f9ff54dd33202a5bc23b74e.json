{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5140/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const authAPI = {\n  login: async credentials => {\n    const response = await api.post('/auth/login', credentials);\n    return response.data;\n  },\n  register: async userData => {\n    const response = await api.post('/auth/register', userData);\n    return response.data;\n  }\n};\nexport const flowersAPI = {\n  getAll: async () => {\n    const response = await api.get('/flowers');\n    return response.data;\n  },\n  getById: async id => {\n    const response = await api.get(`/flowers/${id}`);\n    return response.data;\n  }\n};\nexport const ordersAPI = {\n  getAll: async () => {\n    const response = await api.get('/orders');\n    return response.data;\n  },\n  getMyOrders: async () => {\n    const response = await api.get('/orders/my-orders');\n    return response.data;\n  },\n  getById: async id => {\n    const response = await api.get(`/orders/${id}`);\n    return response.data;\n  },\n  create: async order => {\n    const response = await api.post('/orders', order);\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","credentials","post","data","register","userData","flowersAPI","getAll","get","getById","id","ordersAPI","getMyOrders","order"],"sources":["C:/Users/90545/source/vscRepos/ÇiçekDünyası/cicekdunyasi-web/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { LoginRequest, LoginResponse, Flower, Order, CreateOrderRequest } from '../types';\r\n\r\nconst API_BASE_URL = 'http://localhost:5140/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle auth errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const authAPI = {\r\n  login: async (credentials: LoginRequest): Promise<LoginResponse> => {\r\n    const response = await api.post('/auth/login', credentials);\r\n    return response.data;\r\n  },\r\n  register: async (userData: { username: string; email: string; password: string }): Promise<any> => {\r\n    const response = await api.post('/auth/register', userData);\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport const flowersAPI = {\r\n  getAll: async (): Promise<Flower[]> => {\r\n    const response = await api.get('/flowers');\r\n    return response.data;\r\n  },\r\n  getById: async (id: number): Promise<Flower> => {\r\n    const response = await api.get(`/flowers/${id}`);\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport const ordersAPI = {\r\n  getAll: async (): Promise<Order[]> => {\r\n    const response = await api.get('/orders');\r\n    return response.data;\r\n  },\r\n  getMyOrders: async (): Promise<Order[]> => {\r\n    const response = await api.get('/orders/my-orders');\r\n    return response.data;\r\n  },\r\n  getById: async (id: number): Promise<Order> => {\r\n    const response = await api.get(`/orders/${id}`);\r\n    return response.data;\r\n  },\r\n  create: async (order: CreateOrderRequest): Promise<Order> => {\r\n    const response = await api.post('/orders', order);\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAG,2BAA2B;AAEhD,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAZ,GAAG,CAACI,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClCR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;IAChCT,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;IAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMU,OAAO,GAAG;EACrBC,KAAK,EAAE,MAAOC,WAAyB,IAA6B;IAClE,MAAMT,QAAQ,GAAG,MAAMf,GAAG,CAACyB,IAAI,CAAC,aAAa,EAAED,WAAW,CAAC;IAC3D,OAAOT,QAAQ,CAACW,IAAI;EACtB,CAAC;EACDC,QAAQ,EAAE,MAAOC,QAA+D,IAAmB;IACjG,MAAMb,QAAQ,GAAG,MAAMf,GAAG,CAACyB,IAAI,CAAC,gBAAgB,EAAEG,QAAQ,CAAC;IAC3D,OAAOb,QAAQ,CAACW,IAAI;EACtB;AACF,CAAC;AAED,OAAO,MAAMG,UAAU,GAAG;EACxBC,MAAM,EAAE,MAAAA,CAAA,KAA+B;IACrC,MAAMf,QAAQ,GAAG,MAAMf,GAAG,CAAC+B,GAAG,CAAC,UAAU,CAAC;IAC1C,OAAOhB,QAAQ,CAACW,IAAI;EACtB,CAAC;EACDM,OAAO,EAAE,MAAOC,EAAU,IAAsB;IAC9C,MAAMlB,QAAQ,GAAG,MAAMf,GAAG,CAAC+B,GAAG,CAAC,YAAYE,EAAE,EAAE,CAAC;IAChD,OAAOlB,QAAQ,CAACW,IAAI;EACtB;AACF,CAAC;AAED,OAAO,MAAMQ,SAAS,GAAG;EACvBJ,MAAM,EAAE,MAAAA,CAAA,KAA8B;IACpC,MAAMf,QAAQ,GAAG,MAAMf,GAAG,CAAC+B,GAAG,CAAC,SAAS,CAAC;IACzC,OAAOhB,QAAQ,CAACW,IAAI;EACtB,CAAC;EACDS,WAAW,EAAE,MAAAA,CAAA,KAA8B;IACzC,MAAMpB,QAAQ,GAAG,MAAMf,GAAG,CAAC+B,GAAG,CAAC,mBAAmB,CAAC;IACnD,OAAOhB,QAAQ,CAACW,IAAI;EACtB,CAAC;EACDM,OAAO,EAAE,MAAOC,EAAU,IAAqB;IAC7C,MAAMlB,QAAQ,GAAG,MAAMf,GAAG,CAAC+B,GAAG,CAAC,WAAWE,EAAE,EAAE,CAAC;IAC/C,OAAOlB,QAAQ,CAACW,IAAI;EACtB,CAAC;EACDzB,MAAM,EAAE,MAAOmC,KAAyB,IAAqB;IAC3D,MAAMrB,QAAQ,GAAG,MAAMf,GAAG,CAACyB,IAAI,CAAC,SAAS,EAAEW,KAAK,CAAC;IACjD,OAAOrB,QAAQ,CAACW,IAAI;EACtB;AACF,CAAC;AAED,eAAe1B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}